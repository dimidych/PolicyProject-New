// <auto-generated />
using System;
using LoginService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoginService.Migrations
{
    [DbContext(typeof(LoginDbContext))]
    [Migration("20201205223650_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GroupService.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            GroupName = "Админ"
                        });
                });

            modelBuilder.Entity("LoginService.Models.Login", b =>
                {
                    b.Property<long>("LoginId")
                        .HasColumnType("bigint");

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LogIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            LoginId = 1L,
                            Certificate = "BwIAAACkAABSU0EyAAQAAAEAAQDRswwNdIPlkefrwLI43ZLI1RsQtyaIZtiBuhKDqsALTFaZh92DFqdkRgXDl9uPgKD6ryF+T6zt5FwgLn3KjeMxp9q3Kx3MJBBQWvpTjlCyu9mF9Z+JSL5qUBaALXwrfz7N6cKCR9BDwcRfE0EdjPr9jmQxSIvVOQurJqODCBEPyEduGppARQacpvT2+eQf7FaUkdBMabsw6S1wmmFmR1Tc/tHcYI+oEvLa/BOiOZL6aJt4ToGAWdX6C/3PkMeHsM8nYVvE812WVqcHpThJJuvLt6RV/KSq3GJlFR3OmWMyz5AKawPoaC3Tb8XFT3lSw9T2QQb8Iw5urybC1jypJJj2CzZ7vPOU1Zy42J3ibRC6+Xq89yto5zHuNxoD9XfhToIdfOIL05FKccBmNJEWCnRutiwaiWX/jc92V+ccB/97Fhc/3uZltBt0C9aJph4TT7h6WpAl1JWBT4mhI492pp602LZE8Nkd7XlgmNPNCYZwfO5/n58Fw5RJ9K8LdSsDgkVUqKb4yy44bdKZrQRxhF5m06PjlyC6qBU79Rs9hFqbx79+QbxeEf16VG99kqWi4M2qhySuvB1BQu4UDgBcofFNZTJMDe+o8W3B6N4i8D7h+4xZG1yDx4e8q9KyOTlRdq8QfulSDrt3EaEnBrKMeUXdSXC1yI6GjqfTayhsSv4K/Fc5xxE3UQtGQe7Vsw0gjgzkwwmSrqX8LnbMyKNMTwyV8RWWaEg0HGVwsOtys7KEn0pdxv4metkuswMyEwmKnhg=",
                            GroupId = 1,
                            LogIn = "Admin",
                            Password = "827ccb0eea8a706c4c34a16891f84e7b",
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("UserService.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            UserFirstName = "Admin",
                            UserLastName = "Admin"
                        });
                });

            modelBuilder.Entity("LoginService.Models.Login", b =>
                {
                    b.HasOne("GroupService.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
